App.getActiveProject().getGeometryAssembly().clear();

// Function calls
CreatePEC();
var Bottom = make_square(1, 0, "Bottom");
var Top = make_square(1, 1, "Top");
make_cuboid(Bottom, Top);
// Function definitions

// Takes side length (S), height (H), and name (Name) as arguments
function make_square(S, H, Name) // Takes side length and height as argument
{

// Define the edges
var e1 = new LawEdge( "u", "0", H.toString(), 0, S);
var e2 = new LawEdge( "1", "u", H.toString(), 0, S);
var e3 = new LawEdge( "1 - u", "1", H.toString(), 0, S);
var e4 = new LawEdge( "0", "1 - u", H.toString(), 0, S);

// Make a sketch using the edges 
var s = new Sketch(); // All straight edges (e1, e3, e5, e7)
s.addEdge( e1 ); // Inner straight slope
s.addEdge( e2 ); // Inner straight slope
s.addEdge( e3 ); // Inner straight slope
s.addEdge( e4 ); // Inner straight slope

// Make a cover for the surface
var cov1 = new Cover(s);
var r1 = new Recipe();
r1.append( cov1 );
var m1 = new Model();
m1.setRecipe( r1 );

// Add the surface
var surface1 = App.getActiveProject().getGeometryAssembly().append(m1);
surface1.name = Name;

// Set the material (PEC)
var pecMaterial = App.getActiveProject().getMaterialList().getMaterial( "PEC" );
if( null == pecMaterial )
	{
		Output.println( "\"PEC\" material was not found, could not associate with the antenna." );
	}
        else
        {
                App.getActiveProject().setMaterial( surface1, pecMaterial );
                
        }

return surface1;

}


// Make the loft
// Make a loft by taking in the two faces created before
function make_cuboid(Face1, Face2)
{

var newFace1 = new Model();


// Define a loft between the two faces
var loft = new Loft(Face1.pickFace(new Cartesian3D(0.5, 0.5, 0.5), new Cartesian3D(0, 0, -1), 1), "0.0", Face2.pickFace(new Cartesian3D(0.5, 0.5, 0.5), new Cartesian3D(0, 0, 1), 1), "0.0");

loft.setPart1(Face1);
loft.setPart2(Face2);

var face = Face1.clone();
//Output.println(face.getPart());
//Output.println(pickFace(0,0,0));
// Create a model using the loft as the recipe
var r8 = new Recipe();
r8.append( loft );
var m8 = new Model();
m8.setRecipe( r8 );


// Append the loft to the Geometry Assembly
var loft1 = App.getActiveProject().getGeometryAssembly().append(m8);
loft1.name = "Loft 1";
var pecMaterial = App.getActiveProject().getMaterialList().getMaterial( "PEC" );
App.getActiveProject().setMaterial( loft1, pecMaterial );

}


// CreatPEC Function
function CreatePEC() //borrowed from XF demo
{
    //Make the material.  We will use PEC, or Perfect Electrical Conductor:
    var pec = new Material();
    pec.name = "PEC";
    var pecProperties = new PEC();      // This is the electric properties that defines PEC
    var pecMagneticFreespace = new MagneticFreespace();     // We could make a material that acts as PEC and PMC, but in this case we just care about electrical components.
    var pecPhysicalMaterial = new PhysicalMaterial();
    pecPhysicalMaterial.setElectricProperties( pecProperties );
    pecPhysicalMaterial.setMagneticProperties( pecMagneticFreespace );
    pec.setDetails( pecPhysicalMaterial );
    // PEC is historically a "white" material, so we can easily change its appearance:
    var pecBodyAppearance = pec.getAppearance();
    var pecFaceAppearance = pecBodyAppearance.getFaceAppearance();  // The "face" appearance is the color/style associated with the surface of geometry objects
        pecFaceAppearance.setColor( new Color( 255, 255, 255, 255 ) );  // Set the surface color to white. (255 is the maximum intensity, these are in order R,G,B,A).
    // Check for an existing material
    if( null != App.getActiveProject().getMaterialList().getMaterial( pec.name ) )
    {
            App.getActiveProject().getMaterialList().removeMaterial( pec.name );
    }
	    App.getActiveProject().getMaterialList().addMaterial( pec );
}
